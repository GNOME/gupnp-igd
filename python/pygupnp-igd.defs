(define-object Simple
  (in-module "GUPnPIgd")
  (parent "GObject")
  (c-name "GUPnPSimpleIgd")
  (gtype-id "GUPNP_TYPE_SIMPLE_IGD")
)

(define-object SimpleThread
  (in-module "GUPnPSimpleIgd")
  (parent "GUPnPSimpleIgd")
  (c-name "GUPnPSimpleIgdThread")
  (gtype-id "GUPNP_TYPE_SIMPLE_IGD_THREAD")
)

(define-enum Error
  (in-module "GUPnPSimpleIgd")
  (c-name "GUPnPSimpleIgdError")
  (gtype-id "GUPNP_TYPE_SIMPLE_IGD_ERROR")
  (values
    '("s" "GUPNP_SIMPLE_IGD_ERROR_EXTERNAL_ADDRESS")
  )
)
;; -*- scheme -*-
; object definitions ...
;; Enumerations and flags ...


;; From gupnp-simple-igd.h

(define-function error_quark
  (c-name "gupnp_simple_igd_error_quark")
  (return-type "GQuark")
)

(define-function get_type
  (c-name "gupnp_simple_igd_get_type")
  (return-type "GType")
)

(define-function new
  (c-name "gupnp_simple_igd_new")
  (is-constructor-of "GupnpSimpleIgd")
  (return-type "GUPnPSimpleIgd*")
)

(define-method add_port
  (of-object "GUPnPSimpleIgd")
  (c-name "gupnp_simple_igd_add_port")
  (return-type "none")
  (parameters
    '("const-gchar*" "protocol")
    '("guint16" "external_port")
    '("const-gchar*" "local_ip")
    '("guint16" "local_port")
    '("guint32" "lease_duration")
    '("const-gchar*" "description")
  )
)

(define-method remove_port
  (of-object "GUPnPSimpleIgd")
  (c-name "gupnp_simple_igd_remove_port")
  (return-type "none")
  (parameters
    '("const-gchar*" "protocol")
    '("guint" "external_port")
  )
)

(define-method delete_all_mappings
  (of-object "GUPnPSimpleIgd")
  (c-name "gupnp_simple_igd_delete_all_mappings")
  (return-type "gboolean")
)


;; -*- scheme -*-
; object definitions ...
;; Enumerations and flags ...


;; From gupnp-simple-igd-thread.h

(define-function thread_get_type
  (c-name "gupnp_simple_igd_thread_get_type")
  (return-type "GType")
)

(define-function thread_new
  (c-name "gupnp_simple_igd_thread_new")
  (is-constructor-of "GupnpSimpleIgdThread")
  (return-type "GUPnPSimpleIgdThread*")
)


;; -*- scheme -*-
; object definitions ...
;; Enumerations and flags ...


;; From gupnp-enum-types.h

(define-function error_get_type
  (c-name "gupnp_simple_igd_error_get_type")
  (return-type "GType")
)


